{"ast":null,"code":"var _jsxFileName = \"/Volumes/T7 Touch/PHP/API2022/reactapi2022/src/pages/CustomersPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Pagination from '../components/Pagination';\nimport customersAPI from '../services/customersAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CustomersPage = props => {\n  _s();\n\n  const [customers, setCustomers] = useState([]); //pour la pagination\n\n  const [currentPage, setCurrentPage] = useState(1); //filtre \n\n  const [search, setSearch] = useState(\"\");\n\n  const fetchCustomers = async () => {\n    try {\n      const data = await customersAPI.findAll();\n      setCustomers(data);\n    } catch (error) {\n      // notif à faire\n      console.log(error.response);\n    }\n  };\n\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n\n  const handleDelete = async id => {\n    // pessimiste\n    const originalCustomers = [...customers]; // optimiste\n\n    setCustomers(customers.filter(customer => customer.id !== id)); // si cela n'a pas fonctionné, on réintègre la copie avec originalCustomers\n\n    try {\n      await customersAPI.delete(id);\n    } catch (error) {\n      setCustomers(originalCustomers); // notif à faire\n    }\n  }; // pour les filtres\n\n\n  const handleSearch = event => {\n    const value = event.currentTarget.value;\n    setSearch(value);\n    setCurrentPage(1);\n  };\n\n  const filteredCustomers = customers.filter(c => c.firstName.toLowerCase().includes(search.toLowerCase()) || c.lastName.toLowerCase().includes(search.toLowerCase()) || c.email.toLowerCase().includes(search.toLowerCase()) || c.company && c.company.toLowerCase().includes(search.toLowerCase())); // pour la pagination\n\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n\n  const itemsPerPage = 10;\n  const paginatedCustomers = Pagination.getData(filteredCustomers, currentPage, itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Liste des clients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Rechercher...\",\n        onChange: handleSearch,\n        value: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Entreprise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Factures\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"Montant total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"Montant restant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: paginatedCustomers.map(customer => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [customer.firstName, \" \", customer.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge badge-primary bg-primary\",\n              children: customer.invoices.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: [customer.totalAmount.toLocaleString(), \"\\u20AC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: [customer.unpaidAmount.toLocaleString(), \"\\u20AC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: customer.invoices.length > 0,\n              onClick: () => handleDelete(customer.id),\n              className: \"btn btn-sm btn-danger\",\n              children: \"Supprimer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this)]\n        }, customer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), itemsPerPage < filteredCustomers.length && /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      itemsPerPage: itemsPerPage,\n      length: filteredCustomers.length,\n      onPageChanged: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomersPage, \"gNikvhoReI4ykZnyEWHMMD0dlOw=\");\n\n_c = CustomersPage;\nexport default CustomersPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomersPage\");","map":{"version":3,"sources":["/Volumes/T7 Touch/PHP/API2022/reactapi2022/src/pages/CustomersPage.jsx"],"names":["useState","useEffect","Pagination","customersAPI","CustomersPage","props","customers","setCustomers","currentPage","setCurrentPage","search","setSearch","fetchCustomers","data","findAll","error","console","log","response","handleDelete","id","originalCustomers","filter","customer","delete","handleSearch","event","value","currentTarget","filteredCustomers","c","firstName","toLowerCase","includes","lastName","email","company","handlePageChange","page","itemsPerPage","paginatedCustomers","getData","map","invoices","length","totalAmount","toLocaleString","unpaidAmount"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react';\nimport Pagination from '../components/Pagination';\nimport customersAPI from '../services/customersAPI';\n\nconst CustomersPage = (props) => {\n    \n    const [customers, setCustomers] = useState([])\n\n    //pour la pagination\n    const [currentPage, setCurrentPage] = useState(1)\n\n    //filtre \n    const [search, setSearch] = useState(\"\")\n    \n    const fetchCustomers = async () => {\n        try{\n            const data = await customersAPI.findAll()\n            setCustomers(data)\n        }catch(error)\n        {\n            // notif à faire\n            console.log(error.response)\n        }\n    }\n\n\n    useEffect(()=>{\n      fetchCustomers()\n    },[])\n\n    const handleDelete = async (id) => {\n        // pessimiste\n        const originalCustomers = [...customers]\n\n        // optimiste\n        setCustomers(customers.filter(customer => customer.id !== id))\n\n        // si cela n'a pas fonctionné, on réintègre la copie avec originalCustomers\n        try{\n            await customersAPI.delete(id)\n        }catch(error)\n        {\n            setCustomers(originalCustomers)\n            // notif à faire\n        }\n    }\n\n    // pour les filtres\n    const handleSearch = event => {\n        const value = event.currentTarget.value \n        setSearch(value)\n        setCurrentPage(1)\n    }\n\n    const filteredCustomers = customers.filter(c =>\n        c.firstName.toLowerCase().includes(search.toLowerCase()) ||\n        c.lastName.toLowerCase().includes(search.toLowerCase()) || \n        c.email.toLowerCase().includes(search.toLowerCase()) || \n        (c.company && c.company.toLowerCase().includes(search.toLowerCase()))    \n    )\n\n    // pour la pagination\n    const handlePageChange = (page) => {\n        setCurrentPage(page)\n    }\n\n    const itemsPerPage = 10\n\n    const paginatedCustomers = Pagination.getData(filteredCustomers, currentPage, itemsPerPage)\n    \n    return ( \n        <>\n            <h1>Liste des clients</h1>\n            {/* filtre */}\n            <div className=\"form-group\">\n                <input type=\"text\" className='form-control' placeholder='Rechercher...' onChange={handleSearch} value={search} />\n            </div>\n            <table className='table table-hover'>\n                <thead>\n                    <tr>\n                        <th>Id</th>\n                        <th>Client</th>\n                        <th>Email</th>\n                        <th>Entreprise</th>\n                        <th>Factures</th>\n                        <th className='text-center'>Montant total</th>\n                        <th className='text-center'>Montant restant</th>\n                        <th></th>\n                    </tr>    \n                </thead> \n                <tbody>\n                    {paginatedCustomers.map(customer => (\n                        <tr key={customer.id}>\n                            <td>{customer.id}</td>\n                            <td>{customer.firstName} {customer.lastName}</td>\n                            <td>{customer.email}</td>\n                            <td>{customer.company}</td>\n                            <td className='text-center'>\n                                <span className=\"badge badge-primary bg-primary\">\n                                    {customer.invoices.length}\n                                </span>\n                            </td>\n                            <td className=\"text-center\">{customer.totalAmount.toLocaleString()}€</td>\n                            <td className=\"text-center\">{customer.unpaidAmount.toLocaleString()}€</td>\n                            <td>\n                                <button\n                                    disabled={customer.invoices.length > 0}\n                                    onClick={()=> handleDelete(customer.id)} \n                                    className=\"btn btn-sm btn-danger\">Supprimer</button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>           \n            </table>\n            {\n                itemsPerPage < filteredCustomers.length && \n                <Pagination \n                    currentPage={currentPage}\n                    itemsPerPage={itemsPerPage}\n                    length={filteredCustomers.length}\n                    onPageChanged={handlePageChange}\n                />    \n\n            }\n        \n        </>\n     );\n}\n \nexport default CustomersPage;"]},"metadata":{},"sourceType":"module"}